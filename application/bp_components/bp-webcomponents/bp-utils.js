// Generated by CoffeeScript 1.8.0
(function() {
  window.Mathx = {
    rounded: function(number, rounder) {
      return Math.round(number / rounder) * rounder;
    }
  };

  window.Datex = {
    currentHour: function() {
      var hour, time;
      time = new Date();
      hour = time.getHours();
      if (time.getMinutes() > 30) {
        hour++;
      }
      if (hour > 23) {
        hour = 0;
      }
      return hour;
    },
    currentTime: function() {
      var date;
      date = new Date();
      return "" + (date.getHours()) + ":" + (date.getMinutes()) + ":" + (date.getSeconds());
    }
  };

  window.LocalStorage = {
    load: function(name, defaultValue) {
      var value;
      value = typeof localStorage !== "undefined" && localStorage !== null ? localStorage.getItem(name) : void 0;
      if (value === null || (value == null)) {
        if (defaultValue != null) {
          this.save(name, defaultValue);
        }
        return defaultValue;
      } else {
        return JSON.parse(value);
      }
    },
    save: function(name, value) {
      if (typeof localStorage !== "undefined" && localStorage !== null) {
        return localStorage.setItem(name, JSON.stringify(value));
      }
    },
    clear: function() {
      return localStorage.clear();
    },
    unload: function(name) {
      return localStorage.removeItem(name);
    }
  };

  window.StorageData = (function() {
    function StorageData(id, defaultData) {
      this.id = id;
      this.defaultData = defaultData;
      this.load();
    }

    StorageData.prototype.load = function() {
      return this.data = LocalStorage.load(this.id, this.defaultData);
    };

    StorageData.prototype.save = function() {
      return LocalStorage.save(this.id, this.data);
    };

    return StorageData;

  })();

  window.Viewx = {
    visibleHeight: function() {
      return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight || window.height || screen.height || 0;
    }
  };

  Log.info("Utils initialized.");

}).call(this);

//# sourceMappingURL=bp-utils.js.map
